@page "/"
@using eST1C.WebApp.Service
@inject eST1C.WebApp.Service.PCNameCountService PCNameCountService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject eST1C.WebApp.Service.LogDataService LogDataService

@using eST1C.WebApp.DTO

@inject PCNameCountService PCNameCountService
@if (showLoading)
{

    <div style="position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0, 0, 0, 0.5); display: flex; justify-content: center; align-items: center; z-index: 9999;">
        <div class="spinner-border text-warning" style="width: 3rem; height: 3rem; color: blueviolet;" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}

<h3 class="mb-4">Total Number of Smart Torque / Station</h3>

<div class="row">
    @if (companyPCCounts != null && companyPCCounts.Any())
    {
        @foreach (var company in companyPCCounts)
        {
            <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                <div class="card text-center shadow-sm h-100" @onclick="() => NavParam(company.CompanyName)"
                     style="cursor: pointer;">
                    <div class="card-body">
                        <h5 class="card-title text-dark">@company.CompanyName</h5>
                        <p class="card-text fs-1 text-primary" style="color: orange;">@company.UniquePCCount</p>
                    </div>
                    <div class="card-footer text-body-secondary">
                        Last Used:
                    </div>
                </div>
            </div>
        }
    }
    else if (companyPCCounts == null)
    {
        <div class="col-12">
            <div class="alert alert-info" role="alert">
                Loading data...
            </div>
        </div>
    }
    else
    {
        <div class="col-12">
            <div class="alert alert-warning" role="alert">
                No data available.
            </div>
        </div>
    }
</div>

@code {
    private List<PCNameCountDTO>? companyPCCounts;
    private List<LogDataService.LastUsedLogDTO> logs = new List<LogDataService.LastUsedLogDTO>();

    private bool showLoading = false;

    private async Task NavParam(string companyName)
    {
        ShowLoading();
        await Task.Delay(200);
        NavigationManager.NavigateTo($"quick-link/{companyName}");
    }

    protected override async Task OnInitializedAsync()
    {
        // Fetch data using the service
        companyPCCounts = await PCNameCountService.GetPCNameCountsAsync();

        // foreach(PCNameCountDTO obj in companyPCCounts)
        // {
        //     var v = await LogDataService.GetLastUsedDateAsync(obj.CompanyName);
     
        //     obj.LastDateUsed = v;
        // }


    }
    private void ShowLoading()
    {
        showLoading = true;
        StateHasChanged();
    }
}
